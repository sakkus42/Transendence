version: '3'

networks:
  nw:
    driver: bridge
  nw2:
    driver: bridge

services:

  user:
    container_name: user
    build:
      context: ./user
      dockerfile: DockerfileUser
    volumes:
      - ./user:/app
    ports:
      - "8080:8080"
    networks:
      - nw
    depends_on:
      - user_db

  user_db:
    container_name: user_db
    build:
      context: ./user
      dockerfile: DockerfileDb
    volumes:
      - user_data:/var/lib/postgresql/data
      - ./user/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5444:5432"
    networks:
      - nw



  pinpong:
    container_name: pingpong
    build:
      context: ./pingpong
      dockerfile: DockerfilePingPong
    command: python3 manage.py runserver 0.0.0.0:8081
    volumes:
      - ./pingpong:/app
    ports:
      - "8081:8081"
    networks:
      - nw2
    depends_on:
      - pingpong_db
  pingpong_db:
    container_name: pingpong_db
    build:
      context: ./pingpong
      dockerfile: DockerfileDb
    volumes:
      - pingpong_data:/var/lib/postgresql/data
      - ./pingpong/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5433:5432"
    networks:
      - nw2

  nginx:
    build: ./frontend
    container_name: frontendbi
    ports:
      - "8082:8082"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend:/usr/share/nginx/html/
      - ./frontend:/usr/share/nginx/templates/
      - ./frontend:/usr/share/nginx/ModulesJS/
      - ./frontend:/usr/share/nginx/Components/
    restart: always
    depends_on:
      - user
    networks:
      - nw

volumes:
  user_data:
  pingpong_data:

  